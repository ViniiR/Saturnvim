{
  "function": {
    "prefix": "f",
    "body": ["{...}:{", "\t$1", "}"]
  },
  "nixos programs": {
    "prefix": "pro",
    "body": "programs."
  },
  "nixos services": {
    "prefix": "ser",
    "body": "services."
  },
  "nixos enable": {
    "prefix": "en",
    "body": "enable = true;"
  },
  "nix-shell": {
    "prefix": "mks",
    "body": [
      "# WARNING: In rust development ensure neovim is open IN nix-shell(nsh) and use cargo check before after git clone (have good codings :))",
      "let pkgs = import <nixpkgs> {}; in",
      "pkgs.mkShell {",
      "\tbuildInputs = with pkgs; [",
      "\t\t$2",
      "\t];",
      "",
      "\tpackages = with pkgs; [",
      "\t\t$1",
      "\t];",
      "",
      "# TODO: is env necessary? works just as plain VARIABLE",
      "\tenv = {",
      "\t\tNIX_ENFORCE_PURITY = 0;",
      "\t};",
      "\tLD_LIBRARY_PATH = lib.makeLibraryPath buildInputs;",
      "",
      "# RUST_SRC_PATH = \"${pkgs.rust.packages.stable.rustPlatform.rustLibSrc}\";",
      "\tnativeBuildInputs = with pkgs; [",
      "\t\t  zsh",
      "\t];",
      "\tshellHook = ''",
      "\t\t  export SHELL=${pkgs.zsh}/bin/zsh",
      "\t\t  exec zsh;",
      "\t'';",
      "}"
    ]
  }
}
